<mxfile host="65bd71144e">
    <diagram id="ctwe0VVcjLdyP20-TScp" name="Page-1">
        <mxGraphModel dx="764" dy="418" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="30" style="edgeStyle=none;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="2" target="14" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="32" style="edgeStyle=none;html=1;entryX=0.006;entryY=0.179;entryDx=0;entryDy=0;entryPerimeter=0;" parent="1" source="2" target="21" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="2" value="&lt;p style=&quot;margin:0px;margin-top:6px;text-align:center;&quot;&gt;&lt;b&gt;Component: Controller&lt;/b&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;** attribute {params; eg data types required, max display: 5}&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- return component continentDropdown(new World&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;instance, {params})&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="align=left;overflow=fill;html=1;dropTarget=0;" parent="1" vertex="1">
                    <mxGeometry x="20" y="20" width="370" height="110" as="geometry"/>
                </mxCell>
                <mxCell id="44" style="edgeStyle=none;html=1;" edge="1" parent="1" source="4" target="8">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="Class: Continent" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
                    <mxGeometry x="470" y="240" width="310" height="190" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="+ constructor(continent)&#10;    add attribute [all urban areas array]&#10;&#10;+ method fetchUrbanAreas(continent)&#10;    api call filtered by continent&#10;    calls formatAllUrbanAreasListAsURLSs(response)&#10;&#10;+ #method formatAllUrbanAreasListAsURLSs(response)&#10;    takes response and turns it into an array of url links&#10;    to get details on all urban areas on a continent&#10;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="4" vertex="1">
                    <mxGeometry y="26" width="310" height="164" as="geometry"/>
                </mxCell>
                <mxCell id="42" style="edgeStyle=none;html=1;entryX=0.75;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" source="8" target="14">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="8" value="Class: UrbanAreaData" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
                    <mxGeometry x="470" y="470" width="310" height="350" as="geometry"/>
                </mxCell>
                <mxCell id="9" value="+ constructor(continent, allUrbanAreas, maxToDisplay)&#10;    add attribute [top urban areas]&#10;&#10;+ method fetchAllUrbanDetails&#10;    loops through allUrbanAreas url list and calls; &#10;    fetchOneUrbanAreaDetail(url) on each&#10;    then formatAllUrbanAreaDetails(list)&#10;    then orderTopUrbanAreas&#10;    then filterTopUrbanAreas&#10;&#10;+ #method fetchOneUrbanAreaDetail(url)&#10;    api call on each urban area to get details&#10;&#10;+ #method formatAllUrbanAreaDetails(data)&#10;    correctly formats required data&#10;&#10;+ #method orderTopUrbanAreas(unsortedList)&#10;    sorts list by area score&#10;&#10;+ #method filterTopUrbanAreas(list)&#10;    removes all but the top X scoring cities from results&#10;    array, where X is maxToDisplay argument given" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="8" vertex="1">
                    <mxGeometry y="26" width="310" height="324" as="geometry"/>
                </mxCell>
                <mxCell id="41" style="edgeStyle=none;html=1;entryX=0.5;entryY=0;entryDx=0;entryDy=0;" parent="1" source="14" target="40" edge="1">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="43" style="edgeStyle=none;html=1;entryX=-0.007;entryY=0.357;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" source="14" target="7">
                    <mxGeometry relative="1" as="geometry"/>
                </mxCell>
                <mxCell id="14" value="&lt;p style=&quot;margin:0px;margin-top:6px;text-align:center;&quot;&gt;&lt;b&gt;Component: continentDropdown(World instance, {params})&lt;/b&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;** useState hook to watch out for action on the&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;dropdown list&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if none selected:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- return&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;background-color: initial; border-color: var(--border-color);&quot;&gt;display dropdown list of continents(from world.continents)&lt;/span&gt;&lt;/p&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial; border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;if one selected:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- instantiate new continent class(world.continent)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- instantiate new UrbanAreaDataClass(continent instance, params)&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;- return additional component urbanAreaList(UrbanAreaDataClass)&lt;/span&gt;&lt;br&gt;&lt;/p&gt;" style="align=left;overflow=fill;html=1;dropTarget=0;" parent="1" vertex="1">
                    <mxGeometry x="20" y="290" width="370" height="200" as="geometry"/>
                </mxCell>
                <mxCell id="20" value="Class: World" style="swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;" parent="1" vertex="1">
                    <mxGeometry x="470" y="20" width="310" height="180" as="geometry">
                        <mxRectangle x="450" y="20" width="110" height="30" as="alternateBounds"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="21" value="+ constructor &#10;    add attribute [continents]&#10;&#10;+ method fetchContinents&#10;    api call&#10;    calls formatContinentsList(response)&#10;&#10;+ #formatContinentsList&#10;        format raw api results into usable array&#10;" style="text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;" parent="20" vertex="1">
                    <mxGeometry y="26" width="310" height="154" as="geometry"/>
                </mxCell>
                <mxCell id="33" style="edgeStyle=none;html=1;entryX=1;entryY=0.75;entryDx=0;entryDy=0;" parent="1" target="2" edge="1">
                    <mxGeometry relative="1" as="geometry">
                        <mxPoint x="470" y="103" as="sourcePoint"/>
                    </mxGeometry>
                </mxCell>
                <mxCell id="40" value="&lt;p style=&quot;margin:0px;margin-top:6px;text-align:center;&quot;&gt;&lt;b&gt;Component: UrbanAreaList(Continent instance)&lt;/b&gt;&lt;/p&gt;&lt;hr&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;- loop through Continent.UrbanArea instances&lt;/p&gt;&lt;p style=&quot;margin:0px;margin-left:8px;&quot;&gt;- return display of data as a table&lt;/p&gt;" style="align=left;overflow=fill;html=1;dropTarget=0;" parent="1" vertex="1">
                    <mxGeometry x="20" y="650" width="370" height="90" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>